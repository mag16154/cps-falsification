%% 7 dimensional nonlinear system with dynamicsclear all;clc;no_of_dims = 7no_of_trajs = 10traj_combs = combnk(1:no_of_trajs,2)[no_of_samples, dim2] = size(traj_combs);init_state_array = rand(no_of_samples,7)*0.02+0.99;%% Timeaddpath('./TwoLayers/.');tspan = 0:0.01:10;%% Integration/Simulationfor idx = 1:no_of_samples	init_state = init_state_array(idx,:);	[t x] = ode45(@dxdt,tspan,init_state);	traj_t(:,idx) = t;	traj_x(:,:,idx) = x;end[time_steps elems] = size(traj_t);epochs = 100;neurons = 25;for idx = 0:3	jump = 2.^idx;	[inputSeries, targetSeries] = createNNInput(traj_x, time_steps, no_of_dims, traj_combs, jump);	[net, output_mat, target_mat] = trainAndTestNN(inputSeries, targetSeries, epochs, neurons);	%[v_mse] = validateNN(net, traj_x, time_steps, no_of_dims, traj_combs);end	% ============================================================================================% dvdt% ============================================================================================function dv = dxdt(t,v)%%% variablesx1=v(1);x2=v(2);x3=v(3);x4=v(4);x5=v(5);x6=v(6);x7=v(7);%%% equationsdv = [  -0.4*x1 + 5*x3*x4;  0.4*x1 - x2;  x2 - 5*x3*x4;  5*x5*x6 - 5*x3*x4;  -5*x5*x6 + 5*x3*x4;  0.5*x7 - 5*x5*x6;  -0.5*x7 + 5*x5*x6;] ;end